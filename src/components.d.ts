/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface DelegateCashButton {
        /**
          * The current connected wallet
         */
        "connectedWallet": string;
        /**
          * Filter delegations by contract approval
         */
        "contract": string;
        /**
          * Auto-select a vault instead of connected wallet
         */
        "defaultWalletSelection": string;
        /**
          * Force dropdown to be open
         */
        "forceDropdown": boolean;
        /**
          * The main label (eg. "Mint", "Purchase")
         */
        "label": string;
        "refresh": () => Promise<void>;
        /**
          * If you want rounded corners
         */
        "rounded": boolean;
        /**
          * The rpc url of the network you want to use
         */
        "rpcUrl": string;
        /**
          * Light or Dark theme
         */
        "theme": 'light' | 'dark' | string;
        /**
          * Filter delegations by tokenId approval
         */
        "tokenId": string;
        "updateConnectedWallet": (newWallet: string) => Promise<void>;
        "updateSelectedWallet": (newWallet: string) => Promise<void>;
    }
}
export interface DelegateCashButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDelegateCashButtonElement;
}
declare global {
    interface HTMLDelegateCashButtonElement extends Components.DelegateCashButton, HTMLStencilElement {
    }
    var HTMLDelegateCashButtonElement: {
        prototype: HTMLDelegateCashButtonElement;
        new (): HTMLDelegateCashButtonElement;
    };
    interface HTMLElementTagNameMap {
        "delegate-cash-button": HTMLDelegateCashButtonElement;
    }
}
declare namespace LocalJSX {
    interface DelegateCashButton {
        /**
          * The current connected wallet
         */
        "connectedWallet": string;
        /**
          * Filter delegations by contract approval
         */
        "contract"?: string;
        /**
          * Auto-select a vault instead of connected wallet
         */
        "defaultWalletSelection"?: string;
        /**
          * Force dropdown to be open
         */
        "forceDropdown"?: boolean;
        /**
          * The main label (eg. "Mint", "Purchase")
         */
        "label": string;
        "onButtonClick"?: (event: DelegateCashButtonCustomEvent<string>) => void;
        "onWalletSelect"?: (event: DelegateCashButtonCustomEvent<string>) => void;
        /**
          * If you want rounded corners
         */
        "rounded"?: boolean;
        /**
          * The rpc url of the network you want to use
         */
        "rpcUrl": string;
        /**
          * Light or Dark theme
         */
        "theme"?: 'light' | 'dark' | string;
        /**
          * Filter delegations by tokenId approval
         */
        "tokenId"?: string;
    }
    interface IntrinsicElements {
        "delegate-cash-button": DelegateCashButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "delegate-cash-button": LocalJSX.DelegateCashButton & JSXBase.HTMLAttributes<HTMLDelegateCashButtonElement>;
        }
    }
}
